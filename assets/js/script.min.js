$(document).ready(function(){var e=this;function i(){window.vh=e.documentElement.clientHeight,window.vw=e.documentElement.clientWidth,window.vmin=vh>vw?vw:vh,window.vmax=vh<vw?vw:vh}i(),function(){var e=sessionStorage.getItem("activeSectionClass");if(!+e)return;var i=$(".side-nav").children().length-1,n=e;g(n),C(0,n,i)}();var n=$("body"),t=n.find(".work"),o=(n.find(".hire"),n.find(".about")),s=(n.find(".contact"),n.find("input, textarea"));$(".side-nav li, .outer-nav li").click(function(){if(!$(this).hasClass("is-active")){var e=$(this),i=e.parent().find(".is-active"),n=e.parent().children().index(i),t=e.parent().children().index(e),o=$(this).parent().children().length-1;g(t),C(n,t,o)}}),$(".cta").click(function(){var e=$(this);e.hasClass("cta--contact")?$("#contact__popup").removeClass("off"):e.hasClass("cta--about")?S(2):e.hasClass("cta--hire")&&S(4)});var r=!0,a=null;$(this).on("mousewheel DOMMouseScroll",function(e){if(!$(".outer-nav").hasClass("is-vis")){e.preventDefault();var i=e.originalEvent.wheelDelta?-e.originalEvent.wheelDelta:20*e.originalEvent.detail;i>50&&r?(r=!1,clearTimeout(a),a=setTimeout(function(){r=!0},1e3),w(1)):i<-50&&r&&(r=!1,clearTimeout(a),a=setTimeout(function(){r=!0},1e3),w(-1))}});var l,c,d,v,u,f,p,h=document.getElementById("viewport"),m=new Hammer(h);function w(e){var i=$(".side-nav").find(".is-active"),n=$(".side-nav").children().index(i),t=$(".side-nav").children().length-1,o=0;"swipeup"===e.type||40===e.keyCode||e>0?n!==t?(g(o=n+1),C(n,o,t)):(g(o),C(n,o,t)):("swipedown"===e.type||38===e.keyCode||e<0)&&(0!==n?(g(o=n-1),C(n,o,t)):(g(o=t),C(n,o,t)))}function g(e){$(".side-nav, .outer-nav").children().removeClass("is-active"),$(".side-nav").children().eq(e).addClass("is-active"),$(".outer-nav").children().eq(e).addClass("is-active")}function C(e,i,n){sessionStorage.setItem("activeSectionClass",i),$(".main-content").children().removeClass("section--is-active"),$(".main-content").children().eq(i).addClass("section--is-active"),$(".main-content .section").children().removeClass("section--next section--prev"),e===n&&0===i||0===e&&i===n?$(".main-content .section").children().removeClass("section--next section--prev"):e<i?$(".main-content").children().eq(e).children().addClass("section--next"):$(".main-content").children().eq(e).children().addClass("section--prev"),0!==i&&i!==n?$(".header--cta").addClass("is-active"):$(".header--cta").removeClass("is-active")}function S(e){var i=$(".side-nav").find(".is-active"),n=$(".side-nav").children().index(i),t=$(".side-nav").children().length-1,o=e;g(e),C(n,o,t)}function x(e,i){return e/100*window[i]}function I(){var e=n.find(".l-viewport"),i=t.find(".work__lockup"),o=i.find(".outer-slider"),s=i.find(".inner-slider__item-image-container");e.css({height:x(100,"vh")+"px"}),o.css({height:x(75,"vmin")+"px"}),s.css({height:x(40,"vmin")+"px"}),vw>767&&s.css({height:x(25,"vmin")+"px"}),vw,vw>1199&&o.css({height:x(55,"vmin")+"px"}),vw<400&&s.css({height:x(35,"vmin")+"px"}),vw>vh&&(s.css({"min-height":"auto"}),vw<1200&&vw>vh&&s.css({height:x(30,"vmin")+"px"}))}m.get("swipe").set({direction:Hammer.DIRECTION_VERTICAL}),m.on("swipeup swipedown",function(e){w(e)}),$(document).keyup(function(e){$(".outer-nav").hasClass("is-vis")||(e.preventDefault(),w(e))}),$(window).on("resize",function(){i(),I()}),$(".header--nav-toggle").click(function(){$(".perspective").addClass("perspective--modalview"),setTimeout(function(){$(".perspective").addClass("effect-rotate-left--animate")},25),$(".outer-nav, .outer-nav li, .outer-nav--return").addClass("is-vis")}),$(".outer-nav--return, .outer-nav li").click(function(){$(".perspective").removeClass("effect-rotate-left--animate"),setTimeout(function(){$(".perspective").removeClass("perspective--modalview")},400),$(".outer-nav, .outer-nav li, .outer-nav--return").removeClass("is-vis")}),l=o.find(".slider"),c=o.find(".about--options a"),d=new Swiper(l,{init:!0,loop:!0,loopedSlides:4,speed:1500,slidesPerView:"auto",centeredSlides:!0,normalizeSlideIndex:!0,direction:"horizontal",effect:"fade",normalizeSlideIndex:!0,fadeEffect:{crossFade:!0},controller:{by:"slide"}}),c.on("click",function(){var e=$(this).data("slide");d.slideTo(Number(e),1500)}),function(){var e,i=t.find(".outer-slider"),n=t.find(".inner-slider"),o=t.find(".inner-slider__nav--prev"),s=t.find(".inner-slider__nav--next"),r=t.find(".outer-slider__controls"),a=t.find(".outer-slider__nav--prev"),l=t.find(".outer-slider__nav--next"),c=new Swiper(i,{init:!1,loop:!0,loopedSlides:4,slidesPerView:"auto",centeredSlides:!0,normalizeSlideIndex:!0,direction:"vertical",allowTouchMove:!1,effect:"slide",normalizeSlideIndex:!0,controller:{by:"slide"}});c.on("init",function(){console.log("swiper initialized"),e=c.activeIndex,console.log("currentInnerSwiperIndex: "+e)}),c.init();var d,v,u=new Swiper(r,{effect:"slide",normalizeSlideIndex:!0,direction:"horizontal",centeredSlides:!0,loop:!0,loopedSlides:4,slidesPerView:"auto",spaceBetween:35,touchRatio:.2,slideToClickedSlide:!0,normalizeSlideIndex:!0,navigation:{nextEl:l,prevEl:a},controller:{by:"slide"},breakpoints:{700:{slidesPerView:"auto",spaceBetween:0}}});u.controller.control=c,c.controller.control=u,new Swiper(n,{direction:"horizontal",loop:!0,spaceBetween:0,slidesPerView:"auto",loopedSlides:7,loopAdditionalSlides:10,centeredSlides:!0,spaceBetween:0,effect:"coverflow",coverflowEffect:{rotate:40,stretch:0,depth:100,modifier:1,slideShadows:!0},normalizeSlideIndex:!0,slideToClickedSlide:!0}),s.add(o).on("click touchstart",function(i){var n=$(this);if("touchstart"==i.type&&(d=!0,setTimeout(function(){d=!1},400)),!d||"click"!=i.type){var t=c.slides[e],o=$(t).find(".inner-slider")[0];o.swiper,n.hasClass("inner-slider__prev")?o.swiper.slidePrev(400):o.swiper.slideNext(400)}}),c.on("transitionEnd",function(){v||(v=!0,console.log("changed"),e=c.activeIndex,console.log("currentInnerSwiperIndex: "+e),window.setTimeout(function(){v=void 0},200))})}(),s.focusout(function(){""===$(this).val()?$(this).removeClass("has-value"):$(this).addClass("has-value"),window.scrollTo(0,0)}),s.on("focusin",function(){console.log("focusin"),n.addClass("form-field-focused")}),s.on("focusout",function(){console.log("focusin"),n.removeClass("form-field-focused")}),v=$("#startProjectForm"),$("#nameSP"),u=$("#emailSP"),f=$("#service-web"),p=f.closest(".work-request--services"),v.parsley({requiredMessage:"This field is required"}),u.parsley({typeMessage:"Enter a valid e-mail address"}),f.parsley({requiredMessage:"Please select the digital service/s you want us to work on",errorsContainer:function(e){return p},classHandler:function(e){return p}}),v.parsley().on("form:error",function(){alert("validation errors")}).on("form:submit",function(e){return console.log("Form Submitted"),!1}),function(){var e=$("#contact__popup"),i=$("#close-contact-form");console.log(e),e.on("mousewheel DOMMouseScroll",function(e){console.log(e),e.stopPropagation()});var n=document.getElementById("viewport"),t=new Hammer(n);t.get("swipe").set({direction:Hammer.DIRECTION_VERTICAL}),t.on("swipeup swipedown",function(e){console.log(e)}),i.on("click",function(){e.toggleClass("off")})}(),I()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
